/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Repository.MongoDBConnection;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;

/**
 *
 * @author Shari
 */
public class SignUp extends javax.swing.JPanel {

    MainJFrame mainpage;

    /**
     * Creates new form SignUp
     */
    public SignUp(MainJFrame mainpage) {
        initComponents();
        this.mainpage = mainpage;
        loadRolesIntoDropdown();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider1 = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        usernameBox = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        passwordBox = new javax.swing.JTextPane();
        Submit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        backBTN = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        jScrollPane1.setViewportView(usernameBox);

        jScrollPane2.setViewportView(passwordBox);

        Submit.setText("Sign Up");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        jLabel1.setText("                 Sign Up");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        backBTN.setText("back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        jLabel2.setText("Username");

        jLabel3.setText("Role");

        jLabel4.setText("Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backBTN))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(33, 33, 33)
                .addComponent(Submit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(backBTN)
                .addGap(15, 15, 15))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        // TODO add your handling code here:
        String username = usernameBox.getText().trim();
        String password = passwordBox.getText().trim();
        String selectedRoleName = (String) jComboBox1.getSelectedItem();  // Role selected

        if (username.isEmpty() || password.isEmpty() || selectedRoleName == null) {
            javax.swing.JOptionPane.showMessageDialog(this, "❗ Please fill all fields and select a role!");
            return;
        }

        MongoDatabase db = MongoDBConnection.getDatabase();
        if (db != null) {
            MongoCollection<Document> userCollection = db.getCollection("users");
            MongoCollection<Document> roleCollection = db.getCollection("roles");

            // Check if username already exists
            Document existingUser = userCollection.find(new Document("username", username)).first();
            if (existingUser != null) {
                javax.swing.JOptionPane.showMessageDialog(this, "❗ Username already exists! Try another username.");
                return;
            }

            // Find role_id based on selected role name
            Document roleQuery = new Document("role_name", selectedRoleName);
            Document roleDoc = roleCollection.find(roleQuery).first();

            if (roleDoc != null) {
                String roleId = roleDoc.getString("role_id");

                // Insert new user
                Document newUser = new Document("user_id", generateUniqueUserId())
                        .append("username", username)
                        .append("password", password)
                        .append("role_id", roleId);

                userCollection.insertOne(newUser);

                javax.swing.JOptionPane.showMessageDialog(this, "✅ User Registered Successfully!");

                // Clear fields after success
                usernameBox.setText("");
                passwordBox.setText("");
                jComboBox1.setSelectedIndex(0);

                // (Optional) After success, go back to Login page
                mainpage.dispose();
                new MainJFrame().setVisible(true);

            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "❗ Selected role does not exist!");
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "❌ Database connection failed!");
        }
    }//GEN-LAST:event_SubmitActionPerformed

    private String generateUniqueUserId() {
    return "U" + System.currentTimeMillis();  // Example: U1714398001234
}
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        // TODO add your handling code here:
        mainpage.dispose();
        MainJFrame loginFrame = new MainJFrame();
        loginFrame.setVisible(true);
    }//GEN-LAST:event_backBTNActionPerformed

    public void loadRolesIntoDropdown() {
        MongoDatabase db = MongoDBConnection.getDatabase();
        if (db != null) {
            MongoCollection<Document> roleCollection = db.getCollection("roles");

            try (MongoCursor<Document> cursor = roleCollection.find().iterator()) {
                while (cursor.hasNext()) {
                    Document roleDoc = cursor.next();
                    String roleName = roleDoc.getString("role_name");
                    if (roleName != null) {
                        jComboBox1.addItem(roleName);  // Add role name into dropdown
                    }
                }
            } catch (Exception e) {
                System.out.println("Error loading roles: " + e.getMessage());
            }
        } else {
            System.out.println("Database connection failed!");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Submit;
    private javax.swing.JButton backBTN;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextPane passwordBox;
    private javax.swing.JTextPane usernameBox;
    // End of variables declaration//GEN-END:variables
}
