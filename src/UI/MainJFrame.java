/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import UI.Admin.AdminDashboard;
import UI.Shipping.ShippingCoordinatorDashboard;
import UI.ProdAuditor.ProductAuditorDashboard;
import UI.Buyer.BuyerSplitPage;
import UI.Seller.SellerSplitPage;
import Repository.MongoDBConnection;
import Repository.SchemaCreator;
import UI.Auditor.AuditorDashboard;
import UI.Seller.SellerAccountant;
import UI.Shipping.ShippingAccountantDashboard;
import com.mongodb.client.MongoCollection;

import com.mongodb.client.MongoDatabase;
import javax.swing.JOptionPane;
import org.bson.Document;

/**
 *
 * @author Shari
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    public String currentUsername = null;
    public String role = null;
    public String roleId = null;
    public String enterpriseName = null;
    public String organizationName = null;
    public String userId = null;
    
    public MainJFrame() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        loginBTN = new javax.swing.JButton();
        signupBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setMaximumSize(new java.awt.Dimension(700, 400));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 400));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Mainframe.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(jPanel1);

        lblUsername.setText("Username");

        lblPassword.setText("Password");

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        loginBTN.setText("Login");
        loginBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBTNActionPerformed(evt);
            }
        });

        signupBTN.setText("Sign up");
        signupBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                    .addComponent(lblPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(signupBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(loginBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(loginBTN)
                .addGap(18, 18, 18)
                .addComponent(signupBTN)
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBTNActionPerformed
        //SchemaCreator.createSchema();
        String username = txtUsername.getText();
        String password = txtPassword.getText();

        MongoDatabase db = MongoDBConnection.getDatabase();
        if (db != null) {
            MongoCollection<Document> userCollection = db.getCollection("users");
            MongoCollection<Document> roleCollection = db.getCollection("roles");
            MongoCollection<Document> organizationCollection = db.getCollection("organizations");
            MongoCollection<Document> enterpriseCollection = db.getCollection("enterprises");

            Document query = new Document("username", username).append("password", password);
            Document user = userCollection.find(query).first();

            if (user != null) {
                currentUsername = username;

                // Fetch role_id from user
                roleId = user.getString("role_id");
                userId = user.getString("user_id");

                // Fetch role details
                Document roleQuery = new Document("role_id", roleId);
                Document roleDoc = roleCollection.find(roleQuery).first();
                if (roleDoc != null) {
                    role = roleDoc.getString("role_name");
                }

                // Fetch organization details (OPTIONAL if you linked role -> organization in MongoDB)
                Document orgQuery = new Document("role_id", roleId);
                Document orgDoc = organizationCollection.find(orgQuery).first();
                if (orgDoc != null) {
                    organizationName = orgDoc.getString("organization_name");

                    // Fetch enterprise details
                    String enterpriseId = orgDoc.getString("enterprise_id");
                    Document entQuery = new Document("enterprise_id", enterpriseId);
                    Document entDoc = enterpriseCollection.find(entQuery).first();
                    if (entDoc != null) {
                        enterpriseName = entDoc.getString("enterprise_name");
                    }
                }

                System.out.println("Login successful:");
                System.out.println("User: " + currentUsername);
                System.out.println("Role: " + role);
                System.out.println("Organization: " + organizationName);
                System.out.println("Enterprise: " + enterpriseName);

                // Redirect based on role
                switch (role.toLowerCase()) {
                    case "buyer":
                        BuyerSplitPage buyerPanel = new BuyerSplitPage(this);
                        this.setContentPane(buyerPanel);
                        break;

                    case "seller":
                        SellerSplitPage sellerPanel = new SellerSplitPage(this);
                        this.setContentPane(sellerPanel);
                        break;
                        
                    case "auditor":
                        AuditorDashboard auditorPanel = new AuditorDashboard(this);
                        this.setContentPane(auditorPanel);
                        break;

                    case "prdauditor":
                        ProductAuditorDashboard certifierPanel = new ProductAuditorDashboard(this);
                        this.setContentPane(certifierPanel);
                        break;

                    case "shipping coordinator":
                        ShippingCoordinatorDashboard shippingPanel = new ShippingCoordinatorDashboard(this);
                        this.setContentPane(shippingPanel);
                        break;
                    
                    case "shipping accounts":
                        ShippingAccountantDashboard shippingManager = new ShippingAccountantDashboard(this);
                        this.setContentPane(shippingManager);
                        break;
                       
                    case "seller accountant":
                        SellerAccountant sellerAccountant = new SellerAccountant(this);
                        this.setContentPane(sellerAccountant);
                        break;

                    case "admin":
                        AdminDashboard adminPanel = new AdminDashboard(this);
                        this.setContentPane(adminPanel);
                        break;

                    default:
                        JOptionPane.showMessageDialog(this, "❗ Unknown role detected: " + role);
                        break;
                }

                this.invalidate();
                this.validate();

            } else {
                System.out.println("Invalid credentials. Try again!");
                JOptionPane.showMessageDialog(this, "Invalid Username or Password!");
            }
        } else {
            System.out.println("Database connection failed!");
            JOptionPane.showMessageDialog(this, "Database Connection Failed. Please try later.");
        }
    }//GEN-LAST:event_loginBTNActionPerformed

    private void signupBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupBTNActionPerformed
        // TODO add your handling code here:
        this.setContentPane(new SignUp(this));  // Pass current MainJFrame reference
        this.invalidate();
        this.validate();

    }//GEN-LAST:event_signupBTNActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JButton loginBTN;
    private javax.swing.JButton signupBTN;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
